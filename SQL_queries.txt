USE app_academy;

/* --------------- CourseDAOImpl --------------- */

/* SQL_QUERY_COUNT_ENROLLED_STUDENT_COURSE -----------------------------------------------
SELECT COUNT(sc.id_student) AS 'students_enrolled' FROM students_course sc, users u WHERE sc.id_student = u.id AND sc.id_course = ?; 
-----------------------------------------------*/

/* SQL_QUERY_GET_STUDENT_ENROLL_COURSE (modified: Counting enrolled students) -----------------------------------------------
INSERT INTO students_course (id_student, id_course) VALUES (?, ?);
-----------------------------------------------*/

/* SQL_QUERY_GET_STUDENT_ENROLLED_COURSES -----------------------------------------------
SELECT (SELECT COUNT(sc.id_student) AS 'students_enrolled' FROM students_course sc WHERE sc.id_course = c.id) AS 'enrolled_students', c.id AS 'id_course', c.name AS 'name_course', c.identifier AS 'identifier_course', c.hours AS 'hours_course', u.name AS 'name_professor', u.surname AS 'surname_professor' FROM students_course AS sc, courses AS c, users AS u WHERE sc.id_student = ? AND sc.id_course = c.id AND c.id_professor = u.id ORDER BY c.id ASC LIMIT 25;
-----------------------------------------------*/

/* SQL_QUERY_GET_STUDENT_AVAILABLE_COURSES (modified: Counting enrolled students) -----------------------------------------------
SELECT (SELECT COUNT(sc.id_student) AS 'students_enrolled' FROM students_course sc WHERE sc.id_course = c.id) AS 'enrolled_students', c.id AS 'id_course', c.name AS 'name_course', c.identifier AS 'identifier_course', c.hours AS 'hours_course', u.name AS 'name_professor', u.surname AS 'surname_professor' FROM courses c, users u WHERE c.id_professor = u.id AND c.id_professor = u.id AND c.id NOT IN (SELECT sc.id_course FROM students_course sc WHERE sc.id_student = ?) ORDER BY c.id LIMIT 25;
-----------------------------------------------*/

/* SQL_QUERY_DELETE_COURSE	 -----------------------------------------------
DELETE FROM courses WHERE courses.id = ? AND courses.id_professor = ?;
-----------------------------------------------*/

/* SQL_QUERY_CREATE_COURSE -----------------------------------------------
INSERT INTO courses (name, identifier, hours, id_professor) VALUES (?, ?, ?, ?);
-----------------------------------------------*/  
  
/* SQL_QUERY_GET_COURSES_BY_PROFESSOR_ID (modified: Counting enrolled students) -----------------------------------------------
SELECT (SELECT COUNT(sc.id_student) AS 'students_enrolled' FROM students_course sc WHERE sc.id_course = c.id) AS 'enrolled_students', c.id AS 'id_course', c.hours AS 'hour_course', c.name AS 'name_course', c.id_professor AS 'id_professor_course', c.identifier AS 'identifier_course', u.id AS 'id_professor', u.name AS 'name_professor', u.surname AS 'surname_professor' FROM courses AS c, users AS u WHERE c.id_professor = u.id AND c.id_professor = ?; 
-----------------------------------------------*/ 

/* SQL_QUERY_GET_ALL_COURSES (modified: Counting enrolled students) -----------------------------------------------
SELECT (SELECT COUNT(sc.id_student) AS 'students_enrolled' FROM students_course sc WHERE sc.id_course = c.id) AS 'enrolled_students', c.id AS 'id_course', c.name AS 'name_course', c.identifier AS 'identifier_course', c.hours AS 'hour_course', c.id_professor AS 'id_professor_course', u.id AS 'id_professor', u.name AS 'name_professor', u.surname AS 'surname_professor', u.role AS 'user_role'  FROM courses AS c, users AS u WHERE c.id_professor = u.id;
-----------------------------------------------*/ 



/* --------------- UserDAOImpl --------------- */

/* SQL_QUERY_CHECKUSER -----------------------------------------------
SELECT u.id AS 'id_user', u.name AS 'name_user', u.surname AS 'surname_user', u.role AS 'role_user', u.password AS 'password_user' FROM users AS u WHERE name = ? AND password = MD5('?');
-----------------------------------------------*/